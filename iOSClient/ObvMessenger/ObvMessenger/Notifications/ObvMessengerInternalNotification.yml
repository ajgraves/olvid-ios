import:
  - Foundation
  - CoreData
  - ObvTypes
  - ObvEngine
  - OlvidUtils
  - ObvCrypto
notifications:
- name: messagesAreNotNewAnymore
  params:
  - {name: persistedMessageObjectIDs, type: Set<TypeSafeManagedObjectID<PersistedMessage>>}
- name: userWantsToRefreshContactGroupJoined
  params:
  - {name: obvContactGroup, type: ObvContactGroup}
- name: currentOwnedCryptoIdChanged
  params:
  - {name: newOwnedCryptoId, type: ObvCryptoId}
  - {name: apiKey, type: UUID}
- name: externalTransactionsWereMergedIntoViewContext
- name: newMuteExpiration
  params:
  - {name: expirationDate, type: Date}
- name: wipeAllMessagesThatExpiredEarlierThanNow
  params:
  - {name: launchedByBackgroundTask, type: Bool}
  - {name: completionHandler, type: (Bool) -> Void}
- name: userWantsToCallAndIsAllowedTo
  params:
  - {name: contactIds, type: [OlvidUserId]}
  - {name: groupId, type: "GroupIdentifierBasedOnObjectID?"}
- name: userWantsToSelectAndCallContacts
  params:
  - {name: contactIDs, type: [TypeSafeManagedObjectID<PersistedObvContactIdentity>]}
  - {name: groupId, type: "GroupIdentifierBasedOnObjectID?"}
- name: userWantsToCallButWeShouldCheckSheIsAllowedTo
  params:
  - {name: contactIDs, type: [TypeSafeManagedObjectID<PersistedObvContactIdentity>]}
  - {name: groupId, type: "GroupIdentifierBasedOnObjectID?"}
- name: newWebRTCMessageWasReceived
  params:
  - {name: webrtcMessage, type: WebRTCMessageJSON}
  - {name: contactId, type: OlvidUserId}
  - {name: messageUploadTimestampFromServer, type: Date}
  - {name: messageIdentifierFromEngine, type: Data}
- name: newObvMessageWasReceivedViaPushKitNotification
  params:
  - {name: obvMessage, type: ObvMessage}
- name: newWebRTCMessageToSend
  params:
  - {name: webrtcMessage, type: WebRTCMessageJSON}
  - {name: contactID, type: TypeSafeManagedObjectID<PersistedObvContactIdentity>}
  - {name: forStartingCall, type: Bool}
- name: isCallKitEnabledSettingDidChange
- name: isIncludesCallsInRecentsEnabledSettingDidChange
- name: networkInterfaceTypeChanged
  params:
  - {name: isConnected, type: Bool}
- name: outgoingCallFailedBecauseUserDeniedRecordPermission
- name: voiceMessageFailedBecauseUserDeniedRecordPermission
- name: rejectedIncomingCallBecauseUserDeniedRecordPermission
- name: userRequestedDeletionOfPersistedMessage
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: persistedMessageObjectID, type: NSManagedObjectID}
  - {name: deletionType, type: DeletionType}
- name: trashShouldBeEmptied
- name: userRequestedDeletionOfPersistedDiscussion
  params:
  - {name: persistedDiscussionObjectID, type: NSManagedObjectID}
  - {name: deletionType, type: DeletionType}
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: newCallLogItem
  params:
  - {name: objectID, type: TypeSafeManagedObjectID<PersistedCallLogItem>}
- name: callLogItemWasUpdated
  params:
  - {name: objectID, type: TypeSafeManagedObjectID<PersistedCallLogItem>}
- name: userWantsToIntroduceContactToAnotherContact
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: firstContactCryptoId, type: ObvCryptoId}
  - {name: secondContactCryptoIds, type: Set<ObvCryptoId>}
- name: userWantsToShareOwnPublishedDetails
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: sourceView, type: UIView}
- name: userWantsToSendInvite
  params:
  - {name: ownedIdentity, type: ObvOwnedIdentity}
  - {name: urlIdentity, type: ObvURLIdentity}
- name: userRequestedAPIKeyStatus
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: apiKey, type: UUID}
- name: userRequestedNewAPIKeyActivation
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: apiKey, type: UUID}
- name: userWantsToNavigateToDeepLink
  params:
  - {name: deepLink, type: ObvDeepLink}
- name: useLoadBalancedTurnServersDidChange
- name: userWantsToReadReceivedMessagesThatRequiresUserAction
  params:
  - {name: persistedMessageObjectIDs, type: Set<TypeSafeManagedObjectID<PersistedMessageReceived>>}
- name: requestThumbnail
  params:
  - {name: fyleElement, type: FyleElement}
  - {name: size, type: CGSize}
  - {name: thumbnailType, type: ThumbnailType}
  - {name: completionHandler, type: ((Thumbnail) -> Void), escaping: true}
- name: userHasOpenedAReceivedAttachment
  params:
  - {name: receivedFyleJoinID, type: TypeSafeManagedObjectID<ReceivedFyleMessageJoinWithStatus>}
- name: userWantsToSetAndShareNewDiscussionSharedExpirationConfiguration
  params:
  - {name: persistedDiscussionObjectID, type: NSManagedObjectID}
  - {name: expirationJSON, type: ExpirationJSON}
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: userWantsToDeleteContact
  params:
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: viewController, type: UIViewController}
  - {name: completionHandler, type: ((Bool) -> Void), escaping: true}
- name: cleanExpiredMessagesBackgroundTaskWasLaunched
  params:
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: applyRetentionPoliciesBackgroundTaskWasLaunched
  params:
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: updateBadgeBackgroundTaskWasLaunched
  params:
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: applyAllRetentionPoliciesNow
  params:
  - {name: launchedByBackgroundTask, type: Bool}
  - {name: completionHandler, type: (Bool) -> Void}
- name: userWantsToSendEditedVersionOfSentMessage
  params:
  - {name: sentMessageObjectID, type: NSManagedObjectID}
  - {name: newTextBody, type: String}
- name: newProfilePictureCandidateToCache
  params:
  - {name: requestUUID, type: UUID}
  - {name: profilePicture, type: UIImage}
- name: newCachedProfilePictureCandidate
  params:
  - {name: requestUUID, type: UUID}
  - {name: url, type: URL}
- name: newCustomContactPictureCandidateToSave
  params:
  - {name: requestUUID, type: UUID}
  - {name: profilePicture, type: UIImage}
- name: newSavedCustomContactPictureCandidate
  params:
  - {name: requestUUID, type: UUID}
  - {name: url, type: URL}
- name: obvContactRequest
  params:
  - {name: requestUUID, type: UUID}
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: obvContactAnswer
  params:
  - {name: requestUUID, type: UUID}
  - {name: obvContact, type: ObvContactIdentity}
- name: userWantsToMarkAllMessagesAsNotNewWithinDiscussion
  params:
  - {name: persistedDiscussionObjectID, type: NSManagedObjectID}
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: resyncContactIdentityDevicesWithEngine
  params:
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: resyncContactIdentityDetailsStatusWithEngine
  params:
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: serverDoesNotSuppoortCall
- name: pastedStringIsNotValidOlvidURL
- name: userWantsToRestartChannelEstablishmentProtocol
  params:
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: userWantsToReCreateChannelEstablishmentProtocol
  params:
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: contactIdentityDetailsWereUpdated
  params:
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: userDidSeeNewDetailsOfContact
  params:
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: userWantsToEditContactNicknameAndPicture
  params:
  - {name: persistedContactObjectID, type: NSManagedObjectID}
  - {name: customDisplayName, type: "String?"}
  - {name: customPhotoURL, type: "URL?"}
- name: userWantsToBindOwnedIdentityToKeycloak
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: obvKeycloakState, type: ObvKeycloakState}
  - {name: keycloakUserId, type: String}
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: userWantsToUnbindOwnedIdentityFromKeycloak
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: userWantsToRemoveDraftFyleJoin
  params:
  - {name: draftFyleJoinObjectID, type: TypeSafeManagedObjectID<PersistedDraftFyleJoin>}
- name: userWantsToChangeContactsSortOrder
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: sortOrder, type: ContactsSortOrder}
- name: userWantsToUpdateLocalConfigurationOfDiscussion
  params:
  - {name: value, type: PersistedDiscussionLocalConfigurationValue}
  - {name: persistedDiscussionObjectID, type: TypeSafeManagedObjectID<PersistedDiscussion>}
  - {name: completionHandler, type: () -> Void, escaping: true}
- name: discussionLocalConfigurationHasBeenUpdated
  params:
  - {name: newValue, type: PersistedDiscussionLocalConfigurationValue}
  - {name: localConfigurationObjectID, type: TypeSafeManagedObjectID<PersistedDiscussionLocalConfiguration>}
- name: audioInputHasBeenActivated
  params:
  - {name: label, type: String}
  - {name: activate, type: () -> Void, escaping: true}
- name: aViewRequiresObvMutualScanUrl
  params:
  - {name: remoteIdentity, type: Data}
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: completionHandler, type: ((ObvMutualScanUrl) -> Void), escaping: true}
- name: userWantsToStartTrustEstablishmentWithMutualScanProtocol
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: mutualScanUrl, type: ObvMutualScanUrl}
- name: insertDebugMessagesInAllExistingDiscussions
- name: draftExpirationWasBeenUpdated
  params:
  - {name: persistedDraftObjectID, type: TypeSafeManagedObjectID<PersistedDraft>}
- name: cleanExpiredMuteNotficationsThatExpiredEarlierThanNow
- name: needToRecomputeAllBadges
  params:
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: userWantsToDisplayContactIntroductionScreen
  params:
  - {name: contactObjectID, type: TypeSafeManagedObjectID<PersistedObvContactIdentity>}
  - {name: viewController, type: UIViewController}
- name: userDidTapOnMissedMessageBubble
- name: olvidSnackBarShouldBeShown
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: snackBarCategory, type: OlvidSnackBarCategory}
- name: UserWantsToSeeDetailedExplanationsOfSnackBar
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: snackBarCategory, type: OlvidSnackBarCategory}
- name: UserDismissedSnackBarForLater
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: snackBarCategory, type: OlvidSnackBarCategory}
- name: UserRequestedToResetAllAlerts
- name: olvidSnackBarShouldBeHidden
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: userWantsToUpdateReaction
  params:
  - {name: messageObjectID, type: TypeSafeManagedObjectID<PersistedMessage>}
  - {name: emoji, type: "String?"}
- name: currentUserActivityDidChange
  params:
  - {name: previousUserActivity, type: ObvUserActivityType}
  - {name: currentUserActivity, type: ObvUserActivityType}
- name: displayedSnackBarShouldBeRefreshed
- name: requestUserDeniedRecordPermissionAlert
- name: userWantsToStartIncrementalCleanBackup
  params:
  - {name: cleanAllDevices, type: Bool}
- name: incrementalCleanBackupStarts
- name: incrementalCleanBackupTerminates
- name: userWantsToUnblockContact
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: contactCryptoId, type: ObvCryptoId}
- name: userWantsToReblockContact
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: contactCryptoId, type: ObvCryptoId}
- name: installedOlvidAppIsOutdated
  params:
  - {name: presentingViewController, type: "UIViewController?"}
- name: userOwnedIdentityWasRevokedByKeycloak
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
- name: uiRequiresSignedContactDetails
  params:
  - {name: ownedIdentityCryptoId, type: ObvCryptoId}
  - {name: contactCryptoId, type: ObvCryptoId}
  - {name: completion, type: "(SignedUserDetails?) -> Void", escaping: true}
- name: requestSyncAppDatabasesWithEngine
  params:
  - {name: completion, type: "(Result<Void,Error>) -> Void", escaping: true}
- name: uiRequiresSignedOwnedDetails
  params:
  - {name: ownedIdentityCryptoId, type: ObvCryptoId}
  - {name: completion, type: "(SignedUserDetails?) -> Void", escaping: true}
- name: listMessagesOnServerBackgroundTaskWasLaunched
  params:
  - {name: completionHandler, type: (Bool) -> Void, escaping: true}
- name: userWantsToSendOneToOneInvitationToContact
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: contactCryptoId, type: ObvCryptoId}
- name: userRepliedToReceivedMessageWithinTheNotificationExtension
  params:
  - {name: persistedContactObjectID, type: NSManagedObjectID}
  - {name: messageIdentifierFromEngine, type: Data}
  - {name: textBody, type: String}
  - {name: completionHandler, type: () -> Void, escaping: true}
- name: userRepliedToMissedCallWithinTheNotificationExtension
  params:
  - {name: persistedDiscussionObjectID, type: NSManagedObjectID}
  - {name: textBody, type: String}
  - {name: completionHandler, type: () -> Void, escaping: true}
- name: userWantsToMarkAsReadMessageWithinTheNotificationExtension
  params:
  - {name: persistedContactObjectID, type: NSManagedObjectID}
  - {name: messageIdentifierFromEngine, type: Data}
  - {name: completionHandler, type: () -> Void, escaping: true}
- name: userWantsToWipeFyleMessageJoinWithStatus
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: objectIDs, type: Set<TypeSafeManagedObjectID<FyleMessageJoinWithStatus>>}
- name: userWantsToCreateNewGroupV1
  params:
  - {name: groupName, type: String}
  - {name: groupDescription, type: "String?"}
  - {name: groupMembersCryptoIds, type: Set<ObvCryptoId>}
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: photoURL, type: "URL?"}
- name: userWantsToCreateNewGroupV2
  params:
  - {name: groupCoreDetails, type: GroupV2CoreDetails}
  - {name: ownPermissions, type: Set<ObvGroupV2.Permission>}
  - {name: otherGroupMembers, type: Set<ObvGroupV2.IdentityAndPermissions>}
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: photoURL, type: "URL?"}
- name: userWantsToForwardMessage
  params:
  - {name: messageObjectID, type: TypeSafeManagedObjectID<PersistedMessage>}
  - {name: discussionObjectIDs, type: Set<TypeSafeManagedObjectID<PersistedDiscussion>>}
- name: userWantsToUpdateGroupV2
  params:
  - {name: groupObjectID, type: TypeSafeManagedObjectID<PersistedGroupV2>}
  - {name: changeset, type: ObvGroupV2.Changeset}
- name: inviteContactsToGroupOwned
  params:
  - {name: groupUid, type: UID}
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: newGroupMembers, type: Set<ObvCryptoId>}
- name: removeContactsFromGroupOwned
  params:
  - {name: groupUid, type: UID}
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: removedContacts, type: Set<ObvCryptoId>}
- name: badgeForNewMessagesHasBeenUpdated
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: newCount, type: Int}
- name: badgeForInvitationsHasBeenUpdated
  params:
  - {name: ownedCryptoId, type: ObvCryptoId}
  - {name: newCount, type: Int}
- name: requestRunningLog
  params:
  - {name: completion, type: (RunningLogError) -> Void}
- name: metaFlowControllerViewDidAppear
- name: userWantsToUpdateCustomNameAndGroupV2Photo
  params:
  - {name: groupObjectID, type: TypeSafeManagedObjectID<PersistedGroupV2>}
  - {name: customName, type: "String?"}
  - {name: customPhotoURL, type: "URL?"}
- name: userHasSeenPublishedDetailsOfGroupV2
  params:
  - {name: groupObjectID, type: TypeSafeManagedObjectID<PersistedGroupV2>}
- name: tooManyWrongPasscodeAttemptsCausedLockOut
- name: backupForExportWasExported
- name: backupForUploadWasUploaded
- name: backupForUploadFailedToUpload
